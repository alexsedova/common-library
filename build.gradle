plugins {
    id 'groovy'
    id 'maven-publish'
    id 'com.mkobit.jenkins.pipelines.shared-library' version '0.7.0'
}

group 'com.praqma'
version '1.0.0'

repositories {
    maven { url 'http://ct.elcom.local/download/maven2/' } // spb local mirror of some packages
    maven { url 'http://bits.netbeans.org/maven2/' }
    maven { url 'https://repo.jenkins-ci.org/releases/' }
    jcenter()
    maven { url 'https://mvnrepository.com/artifact/' }
//    jcenter()
//    mavenCentral()
//    mavenLocal()
}

apply plugin: "com.mkobit.jenkins.pipelines.shared-library"

sourceSets {
    main {
        groovy {
            srcDirs = ['src', 'vars']
        }
    }
    test {
        groovy {
            srcDirs = ['test/unit', 'test/integration']
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    compile 'com.cloudbees:groovy-cps:1.12'
    testCompile 'junit:junit:4.12'
    testImplementation ('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
    integrationTestCompile 'org.jenkins-ci.plugins:durable-task:1.15@jar'
    integrationTestCompile 'org.jenkins-ci.plugins:command-launcher:1.3@jar'
    integrationTestCompile 'org.jenkins-ci.plugins:git:3.10.0:tests'
    integrationTestCompile 'org.jenkins-ci.plugins:scm-api:2.3.0@jar'
    integrationTestCompile 'org.jenkins-ci.plugins:scm-api:2.3.0:tests'
    integrationTestImplementation('org.spockframework:spock-core:1.1-groovy-2.4')
}

compileGroovy {
    // Create temp file.
    File temp = File.createTempFile("config", ".groovy");

    // Delete temp file when program exits.
    temp.deleteOnExit();

    // Write to temp file
    BufferedWriter out = new BufferedWriter(new FileWriter(temp));
    out.write("""\
        withConfig(configuration) {
            configuration.setDisabledGlobalASTTransformations(['groovy.grape.GrabAnnotationTransformation'] as Set)
        }
    """.stripIndent());
    out.close();
    groovyOptions.configurationScript = temp
}


tasks.create('copyVars', Copy) {
    from '.'
    into 'build/libs/common-library@master'
    include 'vars/**'
    include 'src/**'
}

test.dependsOn(copyVars)

sharedLibrary {
    coreVersion.set("2.107")
    testHarnessVersion.set("2.31")
    pluginDependencies {
        workflowCpsGlobalLibraryPluginVersion.set("2.9")
        //dependency("io.jenkins.blueocean", "blueocean-web", "1.2.4")
        //dependency("org.jenkins-ci.plugins", "pipeline-input-step", "2.8")
        dependency('org.jenkins-ci.plugins.workflow','workflow-multibranch', '2.16')
        dependency('org.jenkins-ci.plugins', 'git', '3.10.0')
        dependency('org.jenkins-ci.plugins', 'git-client', '2.0.0')
    }
}
